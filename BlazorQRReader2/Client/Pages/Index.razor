@page "/"

@inject IJSRuntime JsRuntime
<div>
    <span id="theResult" >@resultQR</span>
</div>
@*<div>
        <img src="download.png" width="100" height="100" />
    </div>*@
<video id="the-video" width="250" height="250"></video>
<button @onclick="StartScanner" disabled="@isStartDisabled">Start</button>
<button disabled="@(isStartDisabled==false)" @onclick="StopScanner" >Stop</button>


<br />
@err
@strdate

@code {
    string err;
    string strdate;
    string resultQR = "";
    bool isStartDisabled = false;
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }


    async void StartScanner()
    {
        try
        {
            isStartDisabled = true;
            await JsRuntime.InvokeAsync<object>("CreateScanner", DotNetObjectReference.Create(this));
        }
        catch (Exception ex)
        {
            err = ex.Message + ex.InnerException?.Message;
        }
        StateHasChanged();
        System.Diagnostics.Debug.WriteLine("Started scanning");
    }

    async Task StopScanner()
    {
        await JsRuntime.InvokeVoidAsync("StopScanner");
    }

    [JSInvokable]
    public async Task<string> GetHelloMessage(string txt)
    {
        resultQR = txt;
        await StopScanner();
        isStartDisabled = false;
        StateHasChanged(); 
        return txt;
    }

}
